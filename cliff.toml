# git-cliff ~ custom configuration file
# https://git-cliff.org/docs/configuration

[bump]
features_always_bump_minor = true
breaking_always_bump_major = true
initial_tag = "1.0.0"
# custom_major_increment_regex = "major"
# custom_minor_increment_regex = "minor|more"

[changelog]
# template for the changelog footer
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits | unique(attribute="message") %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# unify commit message before processing, no more hacky regex
commit_preprocessors = [
  { pattern = '\[Git\]', replace = "git:" },
  { pattern = 'repo:', replace = "git:" },
  { pattern = 'build\(deps\)', replace = "build/deps" },
  { pattern = '\[Vercel\]', replace = "ci:" },
  { pattern = 'workflow:|action:', replace = "ci:" },
  { pattern = 'vercel: bump', replace = "ci: bump" },
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
commit_parsers = [
  { message = "^feat|^api", group = "<!-- 0 -->🚀 Features" },
  # silent typo commits
  { message = "typo|[Rr]eword", group = "<!-- 1 -->🐛 Fixes", skip = true },
  { message = "^(py: |ci: |git: )?[fF]ix|errata", group = "<!-- 1 -->🐛 Fixes" },
  { message = "^doc(s)?", group = "<!-- 3 -->📚 Docs" },
  # no difference to me
  { message = "^refactor|^perf", group = "<!-- 2 -->⚡ Optimization" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  # hacky, but it works, an extra \ is used to escape in toml
  { message = "^chore/release: prepare for", skip = true },
  { message = "^build/deps|^ci: bump", group = "<!-- 4 -->📦 Dependencies" },
  { message = "^chore/pr", skip = true },
  { message = "^chore/pull", skip = true },
  { message = "^chore: update changelog|^chore: bump to", skip = true },
  { message = "^chore|^ci|^build|^git|^py", group = "<!-- 7 -->🛠️ Chores" },
  # silent ics update
  { message = "^ics: update release calendar", group = "<!-- 7 -->🛠️ Chores", skip = true },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀ Revert" },
]
# regex for parsing and grouping commits
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# regex for matching git tags
tag_pattern = "v[0-9].*"
# regex for skipping tags
# skip_tags = ""
# regex for ignoring tags
# ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
# parse links, differs from commit_preprocessors
# link_parsers = [
#   { pattern = "#(\\d+)", href = "https://github.com/orhun/git-cliff/issues/$1" },
#   { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1" },
# ]
# limit the number of commits included in the changelog.
# limit_commits = 42

# remote: https://git-cliff.org/docs/configuration/remote
# this is an experimental feature
# [remote.github]
# owner = "orhun"
# repo = "git-cliff"
# token = ""
# [remote.gitea]
# owner = "orhun"
# repo  = "git-cliff"
# token = "***"
